<script>
  import {Card,Container,Pane,Button,Icon,Field} from 'malina-ui';
  import {mdiCircle, mdiSend} from '@mdi/js';
  import {Route} from 'malinajs-router';
  import {sockets} from '@/stores/sockets';

  import Request from '@/app/Request';
  import Saved from '@/app/Saved';
  import Editor from '@/app/Editor';
  import {modes} from '@/app/Editor/modes.js';

  export let id;

  let socket;
  let info;
  let requests = [];

  let editorMode = 'hex';
  let editorValue = [];

  $onMount( ()=> sockets.$$(updateSocket) );
  $: id, updateSocket;

  function updateSocket(){
    socket = sockets.$.find( s => s.id==id );
    if(socket) info = {
      ip: socket.ip,
      num: socket.num,
    }
  }

  function addRequest(){
    requests.push({
      request:[],
      answer:[]
    });
  }
</script>

<Pane row>
  <Pane col>
    <Pane row size="5" class="top">
      <div class="status">
        {#if info}
          <Icon src={mdiCircle} color="var(--color-{socket ? 'success' : 'error'})" size="0.7"/>
          Connection #{info.num}
          <span>
            {info.ip}
          </span>
        {/if}
      </div>
    </Pane>
    <Pane>
      {#each requests as request}
        <div class="request">
          <Request {request} />
        </div>
      {/each}
    </Pane>
  </Pane>
  <Pane size="16" class="saved" col>
    <Saved data={editorValue} @select={(e)=>editorValue=e.detail}/>
  </Pane>
</Pane>
<Pane row class="editor" size="11">
  <Pane><Editor mode={editorMode} :value={editorValue}/></Pane>
  <Pane size="16" col>
    <Pane>
        <Field gapless class="switch">
          {#each Object.keys(modes) as mode}
            <Button secondary={editorMode===mode} small @click={editorMode=mode}>{mode[0].toUpperCase()+mode.slice(1)}</Button>
          {/each}
        </Field>
    </Pane>
    <Pane class="text-center">
      <Button primary iconRight={mdiSend} disabled={!editorValue.length}>Send</Button>
    </Pane>
  </Pane>
</Pane>



<style>
  .top{
    border-bottom: var(--border);
  }
  .request{
    margin: 2rem;
  }
  .status{
    margin: 1rem;
    font-weight: bold;
  }
  span{
    color: var(--color-neutral);
    font-weight: normal;
  }
  .saved{
    border-left: var(--border);
  }
  .editor{
    border-top: var(--border);
    overflow: hidden;
  }
  .switch :global(.inputs){
    align-items: center;
    padding: .3rem;
  }
</style>